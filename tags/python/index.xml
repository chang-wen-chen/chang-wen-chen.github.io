<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on CozyDev</title>
    <link>https://chang-wen-chen.github.io/tags/python/</link>
    <description>Recent content in Python on CozyDev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 05 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://chang-wen-chen.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python</title>
      <link>https://chang-wen-chen.github.io/software/python/</link>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://chang-wen-chen.github.io/software/python/</guid>
      <description>Cpython Py_INCREF() and Py_DECREF() While Py_INCREF() and Py_DECREF() are essential components of Python&amp;rsquo;s memory management system, they&amp;rsquo;re not the ideal way to directly count how many times a Python variable is used. Let me explain why and offer better alternatives: Role: These functions are at the heart of Python&amp;rsquo;s reference counting garbage collection. Py_INCREF(object): Increments the reference count of an object. This indicates that the object is in use and</description>
    </item>
  </channel>
</rss>
